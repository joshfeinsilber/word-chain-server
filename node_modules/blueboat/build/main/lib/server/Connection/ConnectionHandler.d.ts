import Socket from 'socket.io';
import AvaiableRoomType from '../../../types/AvailableRoomType';
import PubSub from '../../pubsub/PubSub';
import Room from '../../room/Room';
import Storage from '../../storage/Storage';
import CustomGameValues from '../CustomGameValues';
import RoomFetcher from '../RoomFetcher';
interface ConnectionHandlerOptions {
    io: Socket.Server;
    socket: Socket.Socket;
    pubsub: PubSub;
    storage: Storage;
    availableRoomTypes: AvaiableRoomType[];
    roomFetcher: RoomFetcher;
    gameValues: CustomGameValues;
    onRoomMade: (room: Room) => void;
    onRoomDisposed: (roomId: string) => void;
    customRoomIdGenerator?: (roomName: string, roomOptions?: any, creatorOptions?: any) => string;
}
declare const ConnectionHandler: (options: ConnectionHandlerOptions) => void;
export default ConnectionHandler;
